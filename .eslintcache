[{"C:\\Users\\nodej\\Desktop\\Projects\\components\\src\\index.js":"1","C:\\Users\\nodej\\Desktop\\Projects\\components\\src\\App.js":"2","C:\\Users\\nodej\\Desktop\\Projects\\components\\src\\reportWebVitals.js":"3","C:\\Users\\nodej\\Desktop\\Projects\\components\\src\\component\\navbar\\Navbar.js":"4","C:\\Users\\nodej\\Desktop\\Projects\\components\\src\\component\\dropdown\\Dropdown.js":"5"},{"size":500,"mtime":499162500000,"results":"6","hashOfConfig":"7"},{"size":402,"mtime":1610120825378,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"7"},{"size":660,"mtime":1610120691152,"results":"10","hashOfConfig":"7"},{"size":1525,"mtime":1610117095252,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1qu6yat",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"14"},"C:\\Users\\nodej\\Desktop\\Projects\\components\\src\\index.js",[],["24","25"],"C:\\Users\\nodej\\Desktop\\Projects\\components\\src\\App.js",[],"C:\\Users\\nodej\\Desktop\\Projects\\components\\src\\reportWebVitals.js",[],"C:\\Users\\nodej\\Desktop\\Projects\\components\\src\\component\\navbar\\Navbar.js",["26"],"C:\\Users\\nodej\\Desktop\\Projects\\components\\src\\component\\dropdown\\Dropdown.js",["27"],"import React, { useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Dropdown.css\";\r\n\r\nexport const DropdownSimple = ({ dropdownName, dropdownOptions }) => {\r\n  const [dropdownSimpleOpen, setDropdownSimpleOpen] = useState(false);\r\n  const [dropdownSimpleSelected, setDropdownSimpleSelected] = useState(\"\");\r\n  const handleClick = (option) => {\r\n    setDropdownSimpleOpen(false);\r\n    setDropdownSimpleSelected(option);\r\n  };\r\n  return (\r\n    <div className=\"dropdown\">\r\n      <div className=\"dropdownSimple\">\r\n        <span\r\n          className=\"dropdownName\"\r\n          onClick={() => setDropdownSimpleOpen(!dropdownSimpleOpen)}\r\n        >\r\n          {dropdownSimpleSelected ? dropdownSimpleSelected : dropdownName}\r\n          <span\r\n            className={dropdownSimpleOpen ? \"caretUpIcon\" : \"caretDownIcon\"}\r\n          />\r\n        </span>\r\n        {dropdownSimpleOpen && (\r\n          <span className=\"dropdownOptions\">\r\n            <span className=\"dropdownOption\" onClick={() => handleClick(\"\")}>\r\n              {\"None\"}\r\n            </span>\r\n            {dropdownOptions.map((option) => (\r\n              <span\r\n                className=\"dropdownOption\"\r\n                onClick={() => handleClick(option)}\r\n              >\r\n                {option}\r\n              </span>\r\n            ))}\r\n          </span>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nDropdownSimple.propTypes = {\r\n  dropdownName: PropTypes.string.isRequired,\r\n  dropdownOptions: PropTypes.array.isRequired,\r\n};\r\n",{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","severity":1,"message":"33","line":7,"column":26,"nodeType":"34","messageId":"35","endLine":7,"endColumn":30},{"ruleId":"32","severity":1,"message":"36","line":1,"column":17,"nodeType":"34","messageId":"35","endLine":1,"endColumn":26},"no-native-reassign",["37"],"no-negated-in-lhs",["38"],"no-unused-vars","'auth' is assigned a value but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation"]